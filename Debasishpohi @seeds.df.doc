{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNABWT5+x/wZfN88I2kkGkT"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["The ‘seeds.csv’ dataset contains the data about the wheat seeds, the\n","‘Type’ column consist of three unique values, 1, 2, 3, which are classified\n","based on the characteristics of seeds entailing in other columns.\n","Load the ‘seeds.csv’ dataset into a DataFrame and considering the 'Type'\n","column as target, perform the following tasks:\n","\n","CSV File : /content/seeds.csv\n","1. Analyze the target column by printing it’s unique values\n","2. Separate the feature vectors and the target variable\n","3. Split the dataset into train and test sets in a 70:30 ratio\n","4. Build a Decision Tree Classifier and a GaussianNB model and print their\n","accuracy scores\n","5. For the Decision Tree Classifier and a GaussianNB models boost the accuracy\n","using AdaBoost Classifier and compare the accuracy scores with original\n","models using a bar plot"],"metadata":{"id":"LsbVosmOEWu0"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"NE2NParpXAmO"},"outputs":[],"source":["# Code\n","\n","import numpy as np\n","import pandas as pd\n","from sklearn.ensemble import AdaBoostClassifier\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import LabelEncoder, MinMaxScaler\n","from sklearn.metrics import accuracy_score\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["data=pd.read_csv('/content/seeds.csv')\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"-E9yjXAHXVWb","executionInfo":{"status":"ok","timestamp":1694370751045,"user_tz":-330,"elapsed":553,"user":{"displayName":"Debasish Pohi","userId":"00461323975224607109"}},"outputId":"4b72a03c-0892-4ae3-9e8f-675c068ba3a4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Area  Perimeter  Compactness  Kernel.Length  Kernel.Width  \\\n","0  15.26      14.84       0.8710          5.763         3.312   \n","1  14.88      14.57       0.8811          5.554         3.333   \n","2  14.29      14.09       0.9050          5.291         3.337   \n","3  13.84      13.94       0.8955          5.324         3.379   \n","4  16.14      14.99       0.9034          5.658         3.562   \n","\n","   Asymmetry.Coeff  Kernel.Groove  Type  \n","0            2.221          5.220     1  \n","1            1.018          4.956     1  \n","2            2.699          4.825     1  \n","3            2.259          4.805     1  \n","4            1.355          5.175     1  "],"text/html":["\n","  <div id=\"df-4016fe98-bd95-4c45-bb6f-65e0a87ad86c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Area</th>\n","      <th>Perimeter</th>\n","      <th>Compactness</th>\n","      <th>Kernel.Length</th>\n","      <th>Kernel.Width</th>\n","      <th>Asymmetry.Coeff</th>\n","      <th>Kernel.Groove</th>\n","      <th>Type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>15.26</td>\n","      <td>14.84</td>\n","      <td>0.8710</td>\n","      <td>5.763</td>\n","      <td>3.312</td>\n","      <td>2.221</td>\n","      <td>5.220</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>14.88</td>\n","      <td>14.57</td>\n","      <td>0.8811</td>\n","      <td>5.554</td>\n","      <td>3.333</td>\n","      <td>1.018</td>\n","      <td>4.956</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>14.29</td>\n","      <td>14.09</td>\n","      <td>0.9050</td>\n","      <td>5.291</td>\n","      <td>3.337</td>\n","      <td>2.699</td>\n","      <td>4.825</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>13.84</td>\n","      <td>13.94</td>\n","      <td>0.8955</td>\n","      <td>5.324</td>\n","      <td>3.379</td>\n","      <td>2.259</td>\n","      <td>4.805</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>16.14</td>\n","      <td>14.99</td>\n","      <td>0.9034</td>\n","      <td>5.658</td>\n","      <td>3.562</td>\n","      <td>1.355</td>\n","      <td>5.175</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4016fe98-bd95-4c45-bb6f-65e0a87ad86c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4016fe98-bd95-4c45-bb6f-65e0a87ad86c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4016fe98-bd95-4c45-bb6f-65e0a87ad86c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e6912492-1a98-4196-89e9-d447a48acc99\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e6912492-1a98-4196-89e9-d447a48acc99')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e6912492-1a98-4196-89e9-d447a48acc99 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["data.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VR-IPjraXfTb","executionInfo":{"status":"ok","timestamp":1694370801057,"user_tz":-330,"elapsed":502,"user":{"displayName":"Debasish Pohi","userId":"00461323975224607109"}},"outputId":"20054f65-4a1d-479d-84dd-8714489783ed"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(199, 8)"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WOcVI2BZXsAA","executionInfo":{"status":"ok","timestamp":1694370822057,"user_tz":-330,"elapsed":608,"user":{"displayName":"Debasish Pohi","userId":"00461323975224607109"}},"outputId":"16c2d4d6-6931-4bbc-a489-9ac265cbf2ec"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Area               0\n","Perimeter          0\n","Compactness        0\n","Kernel.Length      0\n","Kernel.Width       0\n","Asymmetry.Coeff    0\n","Kernel.Groove      0\n","Type               0\n","dtype: int64"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["data.Type.unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6d0mqqM0XwGr","executionInfo":{"status":"ok","timestamp":1694370847267,"user_tz":-330,"elapsed":498,"user":{"displayName":"Debasish Pohi","userId":"00461323975224607109"}},"outputId":"13e784f2-6eb5-4308-93e2-34d4944a174d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 3])"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["target_ratio=pd.DataFrame({'Counts':data.Type.value_counts(),'Percentage':data.Type.value_counts()/len(data)})\n","target_ratio"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"-pqWy3OLX2ap","executionInfo":{"status":"ok","timestamp":1694370867449,"user_tz":-330,"elapsed":541,"user":{"displayName":"Debasish Pohi","userId":"00461323975224607109"}},"outputId":"a5ca54cf-eeee-4730-d6bd-41335e3a1c32"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Counts  Percentage\n","2      68    0.341709\n","1      66    0.331658\n","3      65    0.326633"],"text/html":["\n","  <div id=\"df-20bac32c-40ac-424b-94bb-09a97ee22cf6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Counts</th>\n","      <th>Percentage</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>68</td>\n","      <td>0.341709</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>66</td>\n","      <td>0.331658</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>65</td>\n","      <td>0.326633</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-20bac32c-40ac-424b-94bb-09a97ee22cf6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-20bac32c-40ac-424b-94bb-09a97ee22cf6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-20bac32c-40ac-424b-94bb-09a97ee22cf6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6cdffefc-ccec-4690-9d8e-8cb1e3d4dae0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6cdffefc-ccec-4690-9d8e-8cb1e3d4dae0')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6cdffefc-ccec-4690-9d8e-8cb1e3d4dae0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["X=data.drop(['Type'],axis=1)\n","y=data.Type"],"metadata":{"id":"_6-DYljPX9uA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"1Krjh38CYB_n","executionInfo":{"status":"ok","timestamp":1694370913595,"user_tz":-330,"elapsed":508,"user":{"displayName":"Debasish Pohi","userId":"00461323975224607109"}},"outputId":"e22cd185-71d7-4b94-dc9d-0d1b0d0518f2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Area  Perimeter  Compactness  Kernel.Length  Kernel.Width  \\\n","0  15.26      14.84       0.8710          5.763         3.312   \n","1  14.88      14.57       0.8811          5.554         3.333   \n","2  14.29      14.09       0.9050          5.291         3.337   \n","3  13.84      13.94       0.8955          5.324         3.379   \n","4  16.14      14.99       0.9034          5.658         3.562   \n","\n","   Asymmetry.Coeff  Kernel.Groove  \n","0            2.221          5.220  \n","1            1.018          4.956  \n","2            2.699          4.825  \n","3            2.259          4.805  \n","4            1.355          5.175  "],"text/html":["\n","  <div id=\"df-04195c34-ad7b-4ef7-a78e-5dc5a8726253\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Area</th>\n","      <th>Perimeter</th>\n","      <th>Compactness</th>\n","      <th>Kernel.Length</th>\n","      <th>Kernel.Width</th>\n","      <th>Asymmetry.Coeff</th>\n","      <th>Kernel.Groove</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>15.26</td>\n","      <td>14.84</td>\n","      <td>0.8710</td>\n","      <td>5.763</td>\n","      <td>3.312</td>\n","      <td>2.221</td>\n","      <td>5.220</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>14.88</td>\n","      <td>14.57</td>\n","      <td>0.8811</td>\n","      <td>5.554</td>\n","      <td>3.333</td>\n","      <td>1.018</td>\n","      <td>4.956</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>14.29</td>\n","      <td>14.09</td>\n","      <td>0.9050</td>\n","      <td>5.291</td>\n","      <td>3.337</td>\n","      <td>2.699</td>\n","      <td>4.825</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>13.84</td>\n","      <td>13.94</td>\n","      <td>0.8955</td>\n","      <td>5.324</td>\n","      <td>3.379</td>\n","      <td>2.259</td>\n","      <td>4.805</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>16.14</td>\n","      <td>14.99</td>\n","      <td>0.9034</td>\n","      <td>5.658</td>\n","      <td>3.562</td>\n","      <td>1.355</td>\n","      <td>5.175</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-04195c34-ad7b-4ef7-a78e-5dc5a8726253')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-04195c34-ad7b-4ef7-a78e-5dc5a8726253 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-04195c34-ad7b-4ef7-a78e-5dc5a8726253');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c1528c7a-4d7f-4bdd-9181-d1b6ccbc6acc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c1528c7a-4d7f-4bdd-9181-d1b6ccbc6acc')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c1528c7a-4d7f-4bdd-9181-d1b6ccbc6acc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["y.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bjed0YtLYGao","executionInfo":{"status":"ok","timestamp":1694370935931,"user_tz":-330,"elapsed":1228,"user":{"displayName":"Debasish Pohi","userId":"00461323975224607109"}},"outputId":"ab0155f1-52b2-42de-e5ea-5847b9e5fb75"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    1\n","1    1\n","2    1\n","3    1\n","4    1\n","Name: Type, dtype: int64"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test=train_test_split(X,y,random_state=8,test_size=0.3)"],"metadata":{"id":"1U9f7YhZYLAt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dt_clf=DecisionTreeClassifier(max_depth=1)\n","dt_clf.fit(X_train,y_train)\n","dt_pred=dt_clf.predict(X_test)\n","acc_dt=round(accuracy_score(y_test,dt_pred),3)\n","print(\"Accuracy score of the Decision tree model is:\")\n","print(acc_dt)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RHJGp7H6YLvH","executionInfo":{"status":"ok","timestamp":1694370987951,"user_tz":-330,"elapsed":798,"user":{"displayName":"Debasish Pohi","userId":"00461323975224607109"}},"outputId":"38448c47-73ab-4acf-e97a-666255a76fa5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy score of the Decision tree model is:\n","0.583\n"]}]},{"cell_type":"code","source":["gnb_model=GaussianNB()\n","gnb_model.fit(X_train,y_train)\n","gnb_pred=gnb_model.predict(X_test)\n","acc_gnb=round(accuracy_score(y_test,gnb_pred),3)\n","print(\"Accuracy score of the GaussianNB model is:\")\n","print(acc_gnb)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bRnyTOWfYYFW","executionInfo":{"status":"ok","timestamp":1694371002165,"user_tz":-330,"elapsed":11,"user":{"displayName":"Debasish Pohi","userId":"00461323975224607109"}},"outputId":"5ea77d54-4416-4dc9-c377-49285eaa628c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy score of the GaussianNB model is:\n","0.933\n"]}]},{"cell_type":"code","source":["ada=AdaBoostClassifier(n_estimators=100,learning_rate=0.6)\n","ada.fit(X_train,y_train)\n","ada_pred=ada.predict(X_test)\n","acc_ada=round(accuracy_score(y_test,ada_pred),3)\n","print(acc_ada)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DPNX2mewYeSQ","executionInfo":{"status":"ok","timestamp":1694371031990,"user_tz":-330,"elapsed":764,"user":{"displayName":"Debasish Pohi","userId":"00461323975224607109"}},"outputId":"6fc15416-0f1a-46cf-c1eb-19997d95fe93"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.883\n"]}]},{"cell_type":"code","source":["ada_gnb=AdaBoostClassifier(base_estimator=GaussianNB(),n_estimators=100,learning_rate=0.5)\n","ada_gnb.fit(X_train,y_train)\n","agnb_pred=ada_gnb.predict(X_test)\n","acc_agnb=round(accuracy_score(y_test,agnb_pred),3)\n","print(acc_agnb)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"brFT9-0eYlx7","executionInfo":{"status":"ok","timestamp":1694371051515,"user_tz":-330,"elapsed":860,"user":{"displayName":"Debasish Pohi","userId":"00461323975224607109"}},"outputId":"fb598327-de6b-4141-82b9-011ac2cc3be9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["0.95\n"]}]},{"cell_type":"code","source":["plt.figure(figsize=(10,2))\n","plt.barh(np.arange(4),[acc_dt,acc_gnb,acc_ada,acc_agnb],\n","         tick_label=['Decision Tree','GaussianNB','AdaBoost(Decision Tree)','AdaBoost(GaussianNB)'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":231},"id":"zsi35FN7Yoss","executionInfo":{"status":"ok","timestamp":1694371105271,"user_tz":-330,"elapsed":622,"user":{"displayName":"Debasish Pohi","userId":"00461323975224607109"}},"outputId":"dac4bcc7-6664-4650-f5b6-374f91d6ca95"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<BarContainer object of 4 artists>"]},"metadata":{},"execution_count":17},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x200 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"NFEQCqG8Y2Ow"},"execution_count":null,"outputs":[]}]}